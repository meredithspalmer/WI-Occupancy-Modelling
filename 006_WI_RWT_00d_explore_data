# Project: WI Occupancy Range Wide Trends

# This file contains code to explore both the species data (e.g. number of record per 
# species) and the covariate data (e.g. correlation among covariates).

# Load libraries
library(tidyverse)
library(lubridate)
library(arrow)
library(ggforce)


# Load data
overview_seq <- open_dataset("data/WI_data/sequences/parquet")
overview_images <- open_dataset("data/WI_data/images/parquet")

# Species sata exploration ---------------------------------------------------------------
# summarize data for sequence and image projects
summ_seq <- overview_seq %>% 
  mutate(record_date = sequence_date_fix,
         sensor_start_date = ymd_hms(sensor_start_date_and_time),
         year = year(sensor_start_date)) %>% 
  group_by(class, Accepted_MOL) %>% 
  collect() %>%
  summarise(n_records = n(),
            n_locs = length(unique(deployment_location_id)),
            n_projects = length(unique(project_id)),
            n_years = length(unique(year)),
            min_record_date = min(record_date),
            max_record_date = max(record_date)) 
summ_images <- overview_images %>% 
  mutate(record_date = photo_date,
         sensor_start_date = ymd_hms(sensor_start_date_and_time),
         year = year(sensor_start_date)) %>% 
  group_by(class, Accepted_MOL) %>% 
  collect() %>%
  summarise(n_records = n(),
            n_locs = length(unique(deployment_location_id)),
            n_projects = length(unique(project_id)),
            n_years = length(unique(year)),
            min_record_date = min(record_date),
            max_record_date = max(record_date)) 

# bring all summaries together
summ_all <- rbind(summ_seq, summ_images) %>% 
  group_by(class, Accepted_MOL) %>% 
  summarise(n_records = sum(n_records),
            n_locs = sum(n_locs),
            n_projects = sum(n_projects),
            #n_days = length(unique(record_date)),
            max_n_years = max(n_years),
            min_record_date = min(min_record_date),
            max_record_date = max(max_record_date)) %>% 
  filter(class != "class") %>% 
  mutate(min_record_date = as.Date(min_record_date),
         max_record_date = as.Date(max_record_date))
write.csv(summ_all, file = "output/Data_exploration/Species/Summary_data_all_species.csv")


## Summary visualization -------------------------------------------------------
### number of species by class -------------------------------------------------
table(summ_all$class)

### scatterplots ---------------------------------------------------------------
pairs(summ_all[, 3:6])

### n_project vs max_n_years
summ_all %>% 
  mutate(n_projects_cut = cut(n_projects, breaks = c(1, 10, 20, 50, 100, 200, max(summ_all$n_projects)), 
                              include.lowest = TRUE),
         max_n_years_cut = cut(max_n_years, breaks = c(1, 5, 10, 20, max(summ_all$max_n_years)),
                           include.lowest = TRUE)) %>% 
  group_by(class, n_projects_cut, max_n_years_cut) %>% 
  summarize(n_species = n()) %>% 
  ggplot(., aes(x = str_to_title(n_projects_cut), 
                     y = str_to_title(max_n_years_cut), 
                     colour = str_to_title(n_projects_cut),
                     size = n_species)) +
  geom_point() +
  geom_text(aes(label = n_species), 
            colour = "white", 
            size = 3) +
  scale_x_discrete(limits = levels(summ_all_summ$n_projects_cut), position = "top") +
  scale_y_discrete(limits = levels(summ_all_summ$max_n_years_cut)) +
  scale_size_continuous(range = c(10, 30)) + # Adjust as required.
  scale_color_brewer(palette = "Set2") +
  labs(x = "# Projects", y = "Max # Years") +
  theme(legend.position = "none",
        panel.background = element_blank(),
        panel.grid = element_blank(),
        axis.ticks = element_blank()) +
  facet_grid(~class)
ggsave(filename = "figures/All_n_proj_vs_max_n_years.jpg",
       dpi = 600, units = "cm", height = 28, width = 19)

### species by max_n_years -----------------------------------------------------
summ_mammals <- summ_all %>% 
  filter(class == "Mammalia")
for (i in unique(summ_mammals$max_n_years)) {
  #dev.new()
  print( 
    ggplot(summ_mammals[summ_mammals$max_n_years == i, ], aes(y = reorder(Accepted_MOL, max_n_years))) +
      geom_errorbar(aes(xmin = year(min_record_date), xmax = year(max_record_date), color = as.factor(max_n_years))) +
      theme_bw() +
      theme(plot.margin = margin(0.5, 0.5, 0.5, 0.5, unit = "cm"),
            plot.title = element_text(size = 15, face = "bold"),
            strip.text.y = element_text(angle = 270, face = "bold"),
            strip.placement = "outside",
            axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm")),
            axis.title.y = element_blank(),
            axis.text = element_text(size = 10),
            legend.position = "none",
            panel.grid.major.y = element_blank(),
            strip.text.y.right = element_text(angle = 0),
            strip.background = element_blank(),
            panel.border = element_blank())
    )
  filename_plot = paste0("figures/Species_by_max_n_years/Mammals_first_to_last_record_by_species_max_", i, "yrs.jpg")
    ggsave(filename = filename_plot,
           dpi = 600, units = "cm", height = 28, width = 19)
}

summ_birds <- summ_all %>% 
  filter(class == "Aves")
for (i in unique(summ_birds$max_n_years)) {
  #dev.new()
  print( 
    ggplot(summ_birds[summ_birds$max_n_years == i, ], aes(y = reorder(Accepted_MOL, max_n_years))) +
      geom_errorbar(aes(xmin = year(min_record_date), xmax = year(max_record_date), color = as.factor(max_n_years))) +
      theme_bw() +
      theme(plot.margin = margin(0.5, 0.5, 0.5, 0.5, unit = "cm"),
            plot.title = element_text(size = 15, face = "bold"),
            strip.text.y = element_text(angle = 270, face = "bold"),
            strip.placement = "outside",
            axis.title.x = element_text(margin = margin(t = 0.5, b = 0.5, unit = "cm")),
            axis.title.y = element_blank(),
            axis.text = element_text(size = 10),
            legend.position = "none",
            panel.grid.major.y = element_blank(),
            strip.text.y.right = element_text(angle = 0),
            strip.background = element_blank(),
            panel.border = element_blank())
  )
  filename_plot = paste0("figures/Species_by_max_n_years/Birds_first_to_last_record_by_species_max_", i, "yrs.jpg")
  ggsave(filename = filename_plot,
         dpi = 600, units = "cm", height = 28, width = 19)
}

# Covariates data exploration ---------------------------------------------------
# CODE TO REVIEW!!! 2025-02-14 -------------------------------------------------
#' Values reported for each covariate were extracted at the 1 kmsq cells corresponding to the locations sampled in latest WI data freeze (20220530)
#' 
#' Load libraries
library(tidyverse)
library(corrplot)
library(ezknitr)
library(inspectdf)
library(corrr)
# plotting theme


#' Load data 
covs <- read.csv("output/Covs_WI_cell_20220530.csv") 

names(covs)
glimpse(covs)

summary(covs)
# _tri_ is terrain rugdness index

#' # Correlation and skewness by group
#+ r corr, include=TRUE
#' #### Correlation among *static covariates*
summary(covs %>% select(temp_annual:WDPA_IUCNcat))
#' Including only complete cases (to remove NAs)
cor_val <- cor(covs %>% select(temp_annual:WDPA_IUCNcat) %>% drop_na())
corrplot(cor_val, method = "number", type = "upper", diag = FALSE, mar = c(1, 1, 1, 1))

#' Skewess
inspect_num(covs %>% select(temp_annual:WDPA_IUCNcat)) %>%  
  inspectdf::show_plot(x = ., plot_layout = c(5, 5))

#' #### Correlation in *impervious surface change (annual)*
summary(covs %>% select(impervSurfPropChange_1999:impervSurfPropChange_2018))
#' There are several NA's but those are cells in which there has never been change
#' (e.g. within protected areas).

#' Including only complete cases (to remove NAs)
cor_val <- cor(covs %>% select(impervSurfPropChange_1999:impervSurfPropChange_2018) %>% drop_na())
corrplot(cor_val, method = "number", type = "upper", diag = FALSE, mar = c(1, 1, 1, 1))

#' Skewess
inspect_num(covs %>% select(impervSurfPropChange_1999:impervSurfPropChange_2018)) %>%  
  inspectdf::show_plot(x = ., plot_layout = c(5, 5))

#' #### Correlation in *Global Forest Change (forest loss)*
summary(covs %>% select(GFC_2001:GFC_2019))

#' Including only complete cases (to remove NAs)
cor_val <- cor(covs %>% select(GFC_2001:GFC_2019) %>% drop_na())
corrplot(cor_val, method = "number", type = "upper", diag = FALSE, mar = c(1, 1, 1, 1))
#' Values among years are highly correlated , with slight decrease in correlation 
#' as the years progress. **What about the chnage between one year and the previous?**

#' Skewess
inspect_num(covs %>% select(GFC_2001:GFC_2019)) %>%  
  inspectdf::show_plot(x = ., plot_layout = c(5, 5))

#' #### Correlation in *spring EVI (annual)*
summary(covs %>% select(springEVI_2000:springEVI_2022))
#' For every year, there are always 30 cells that have NAs. **Are those always the same?**

#' Including only complete cases (to remove NAs)
cor_val <- cor(covs %>% select(springEVI_2000:springEVI_2022) %>% drop_na())
corrplot(cor_val, method = "number", type = "upper", diag = FALSE, mar = c(1, 1, 1, 1))
#' Correlation always 1.
#' 
#' Skewess
inspect_num(covs %>% select(springEVI_2000:springEVI_2022)) %>%  
  inspectdf::show_plot(x = ., plot_layout = c(5, 5))

#' #### Correlation in *summer EVI (annual)*
summary(covs %>% select(starts_with("SummerEVI")))

#' Including only complete cases (to remove NAs)
cor_val <- cor(covs %>% select(starts_with("SummerEVI")) %>% drop_na())
corrplot(cor_val, method = "number", type = "upper", diag = FALSE, mar = c(1, 1, 1, 1))
#' Correlation very high (always > 75) but more heterogeneous than correlation in spring EVI values. 

#' Skewess
inspect_num(covs %>% select(starts_with("SummerEVI"))) %>%  
  inspectdf::show_plot(x = ., plot_layout = c(5, 5))

#' #### Correlation in *fall EVI (annual)*
summary(covs %>% select(starts_with("FallEVI")))

#' Including only complete cases (to remove NAs)
cor_val <- cor(covs %>% select(starts_with("FallEVI")) %>% drop_na())
corrplot(cor_val, method = "number", type = "upper", diag = FALSE, mar = c(1, 1, 1, 1))
#' Correlation very high (always > 75) but more heterogeneous than correlation in spring EVI values. 

#' Skewess
inspect_num(covs %>% select(starts_with("FallEVI"))) %>%  
  inspectdf::show_plot(x = ., plot_layout = c(5, 5))

#' #### Correlation in *winter EVI (annual)*
summary(covs %>% select(starts_with("WinterEVI")))

#' Including only complete cases (to remove NAs)
cor_val <- cor(covs %>% select(starts_with("WinterEVI")) %>% drop_na())
corrplot(cor_val, method = "number", type = "upper", diag = FALSE, mar = c(1, 1, 1, 1))
#' Correlation very high (always > 75) but more heterogeneous than correlation in spring EVI values. 

#' Skewess
inspect_num(covs %>% select(starts_with("WinterEVI"))) %>%  
  inspectdf::show_plot(x = ., plot_layout = c(5, 5))

#' # Correlation among all the covariates
covs_corr <- covs[, -c(1:3)] %>% 
  correlate(x = ., 
            method = "spearman", 
            quiet = TRUE) %>% 
  rearrange(x = ., 
            method = "MDS", 
            absolute = FALSE)
#head(covs_corr, 20)

covs_corr %>% rplot(rdf = ., shape = 19,
                    colors = c("yellow", 
                               "purple"))

# this code does not work - 
# as they are all strongly correlated within a group
# covs_corr_net <- covs[, -c(1:3)] %>%
#   correlate(x = .,
#             method = "spearman",
#             quiet = TRUE) %>%
#   network_plot(rdf = .,
#                colors = c("firebrick", "white", "dodgerblue"),
#                min_cor = .7)
# covs_corr_net

#' Let's retain only one covs for the annual/seasonal covs
#' *Drawing links only among covariate pairs with absolute corr values higher than 0.5* 
covs_corr_net <- covs %>%
  select(temp_annual:GPW_2000, ghs_built:WDPA_IUCNcat, GFC_2001, impervSurfPropChange_2000,
         springEVI_2000, SummerEVI_2000, FallEVI_2000, WinterEVI_2000) %>% 
  correlate(x = .,
            method = "spearman",
            quiet = TRUE) %>%
  network_plot(rdf = .,
               colors = c("firebrick", "white", "dodgerblue"),
               min_cor = .5)
covs_corr_net

covs %>%
  select(temp_annual:GPW_2000, ghs_built:WDPA_IUCNcat, GFC_2001, impervSurfPropChange_2000,
         springEVI_2000, SummerEVI_2000, FallEVI_2000, WinterEVI_2000) %>% 
  correlate(x = ., 
            method = "spearman", 
            quiet = TRUE) %>% 
  rearrange(x = ., 
            method = "MDS", 
            absolute = FALSE) %>% 
  #shave(upper = FALSE) %>% 
  gather(key = "variable", value = "value", -term) %>% 
  filter(abs(value) >= 0.5) %>% 
  ggplot(., aes(x = term, y = variable, fill = value)) +
  geom_tile(color = "white") +
  geom_text(aes(label = round(value, 1)), size = 3, color = "white") +
  scale_fill_viridis(discrete=FALSE, limit = c(-1,1), 
                     name="Spearman's\nCorrelation") +
  labs(title = "Spearman's correlation",
       subtitle = "Retained only one cov for the annual/seasonal covs",
       caption = "*showing only pairs with absolute corr values >= 0.5 ") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                   size = 12, hjust = 1)) +
  coord_fixed() +
  theme_bw() +
  theme(axis.title = element_blank(),
        axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))


# Explore effort
eff <- data.frame(active_depl = colSums(cam_op, na.rm = TRUE), sampl_date = as.Date(colnames(cam_op)))
ggplot() +
  geom_col(data = eff, aes(x = sampl_date, y = active_depl), col = "royalblue") +
  geom_vline(xintercept = c(periods$start_period, periods$end_period[nrow(periods)]), linetype = "dashed",
             color = "grey56") +
  labs(x = "Date", y = "Number of active deployments", title = species) +
  theme_bw()
#ggsave(filename = "figures/Effort.jpg", device = "jpeg", units = "cm", 
#       width = 50, height = 40, dpi = 300)
