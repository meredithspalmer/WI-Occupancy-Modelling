// Working across globe tile by tile - will need to combine CSVs after the fact

// ============================================================
// 1) Load reference raster (10x10 km grid with cell_IDs)
// ============================================================
var refRaster = ee.Image("projects/ee-mspalmerzool/assets/raster_100km2");

// ============================================================
// 2) Load Hansen GFC v1.12
// ============================================================
var gfc = ee.Image('UMD/hansen/global_forest_change_2024_v1_12');
var lossArea = gfc.select('loss').multiply(ee.Image.pixelArea());
var lossyear = gfc.select('lossyear');

// ============================================================
// 3) Generate global 10x10Â° tiles
// ============================================================
var lonStep = 10;
var latStep = 10;

var tiles = [];
for (var lon = -180; lon < 180; lon += lonStep) {
  for (var lat = -90; lat < 90; lat += latStep) {
    var rect = ee.Feature(ee.Geometry.Rectangle([lon, lat, lon + lonStep, lat + latStep]))
                 .set('tileID', lon + '_' + lat);
    tiles.push(rect);
  }
}

var tilesFC = ee.FeatureCollection(tiles);

// ============================================================
// 4) Function to process one tile
// ============================================================
var processTile = function(tileFeature) {
  var tileGeom = tileFeature.geometry();
  var tileID = tileFeature.get('tileID');

  // Clip raster to tile
  var tileRaster = refRaster.clip(tileGeom);

  // Skip empty tiles
  var cellCount = tileRaster.reduceRegion({
    reducer: ee.Reducer.count(),
    geometry: tileGeom,
    scale: 10000,
    maxPixels: 1e13
  }).get('cell_ID');

  return ee.Algorithms.If(
    ee.Number(cellCount).gt(0),
    // Process non-empty tile
    ee.FeatureCollection(
      ee.List.sequence(1, 24).map(function(y) {
        var yr = ee.Number(y);
        var yrLabel = yr.add(2000).format('%d');

        // Mask loss for this year
        var lossYear = lossArea.updateMask(lossyear.eq(yr));

        // Reduce per cell
        var yearlyStats = lossYear.reduceRegions({
          collection: tileRaster.reduceToVectors({
            geometry: tileGeom,
            scale: 10000,
            geometryType: 'polygon',
            labelProperty: 'cell_ID',
            reducer: ee.Reducer.first(),
            maxPixels: 1e13
          }),
          reducer: ee.Reducer.sum(),
          scale: 10000,
          tileScale: 4
        }).map(function(f) {
          return f.set('year', yrLabel)
                  .set('tileID', tileID);
        });

        return yearlyStats;
      }).flatten()
    ),
    // Return empty collection if no cells
    ee.FeatureCollection([])
  );
};

// ============================================================
// 5) Map over tiles
// ============================================================
var allTilesStats = tilesFC.map(processTile).flatten();

// ============================================================
// 6) Export to Drive (one CSV for all tiles)
// ============================================================
Export.table.toDrive({
  collection: allTilesStats,
  description: 'ForestLoss_AllTiles',
  fileFormat: 'CSV'
});
