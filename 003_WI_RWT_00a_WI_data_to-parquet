# Project: WI Occupancy Range Wide Trends

# This file contains code to convert the WI datasets from csv to parquet files.  
# This needs TO BE DONE ONLY ONCE 

# Set working directory
setwd("/Users/meredithspalmer/Desktop/Work/Yale/Data/Wildlife Insights/Data")
rm(list=ls())

# Load libraries
library(tidyverse)
library(arrow)

# Convert sequence-based projects-----------------------------------------------

# Define schema
overview_seq <- arrow::open_dataset("Cleaned data/sequences_updated_20240710.csv", format = "csv")

# --> There are problems related to data types when reading the data directly. As a workaround we assigned the character data type to all the columns and fix that later fix schema
#chosen_schema <- schema(
#  purrr::map(names(overview_seq), ~Field$create(name = .x, type = string()))
#)

# Apply fixed schema
#overview_seq <- arrow::open_dataset("Cleaned data/sequences_updated.csv",
#                                    format = "csv",
#                                    schema = chosen_schema)

# set output folder and extract relevant information
pq_path_seq <- "Parquet data/WI_Sequences_Parquet"
overview_seq |>
  select("project_id", "deployment_location_id", 
         "sequence_date", "sequence_datetime",
         "sensor_start_date_and_time", "sensor_end_date_and_time", 
         "latitude", "longitude",
         "class", "sp_binomial") |>
  distinct() |>
  group_by(sp_binomial) |>
  write_dataset(path = pq_path_seq, format = "parquet")

# convert image-based projects--------------------------------------------------
overview_images <- arrow::open_dataset("data/WI_data/images/images_updated.csv",
                                       format = "csv")
# fix schema
chosen_schema <- schema(
  purrr::map(names(overview_images), ~Field$create(name = .x, type = string()))
)

overview_images <- arrow::open_dataset("data/WI_data/images/images_updated.csv",
                                       format = "csv",
                                       schema = chosen_schema) #schema_images

# set output folder and extract relevant information
pq_path_images <- "data/WI_data/images/parquet"
overview_images |>
  select("project_id", "deployment_location_id", 
         "sensor_start_date_and_time", "sensor_end_date_and_time", "photo_date", 
         "latitude_fix", "longitude_fix",  
         "class", "Accepted_MOL") |>
  distinct() |>
  group_by(Accepted_MOL) |>
  write_dataset(path = pq_path_images, format = "parquet")

# DONE!
